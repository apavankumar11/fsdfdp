01-10-2024-Notes
----------------
Flex
*****
?
Arranging elements with respect to X-Axis/main-axis
properties
**********
1) display: Flex - used to convert vertical/blocklevel display to inline/horizantal display
2) justify-content: flex-start/center/flex-end/space-between/space-around/space-evenly
3) to move vertically we have align-items
    align-items: stretch/center/flex-start/flex-end;
    parent element height madatory
4) change the flex direction of flex-items
    flex-direction: row/row-reverse/column/column-reverse
5) wrap the flex-items
    flex-wrap: wrap/nowrap/wrap-reverse
6) order property is to change the order of item, applicable for item property
    order: n(integer)
7) flex-basis - to indicate size to flex-item applicable to item property
    flex-basis: number;
8) flex-grow while enlarging the page grow proprtion to particular item/element 
    flex-grow : number;
9) flex-shrink used to specify shrink proprtion to particular item/element 
    flex-shrink: number;

Grid layout
***********
is used for complex type of layouts
1) grid-template-rows is used to divided the screen partions similar to frameset
    grid-template-rows: 10% 80% 10%
2) grid-template-columns is used to partion the screen
    grid-template-columns: 15% 70% 15% 

@media queries
---------------
is used to reperesent the webpages into different devices without distrabances of code
Media queries or RWD(Responsive Web Design)
fixed dimention for any devices is called "Breakpoints"

SASS - to apply the styles called as pre-processor of CSS
it has high rendering capability

Git Lab
-------
1. create account
(find the username)
2. create project in GitLab



Jenkins
-------
1) configure GitLab in Jenkins

2) configure kubernetes

3) configure cloud server/local server(linux server)

BootStrap
---------
BootStrap is the CSS framework
BootStrap framework we will use for RWD
we must include BootStrap CDN in header section of webpages
Current version is BootStrap 5.X

Colors
------
1) primary
2) success
3) danger
4) warning
5) secondary
6) light
7) dark

All the BootStrap CDNS are recommended to be placed at the end body section
NavBar
------
how to create hamburger Icon-
    navbar-toggler & navbar-toggler-Icon
    navbar-item 
        navbar-link
    dropdown menu
    dropdown dropdown-toggler data-toggler="dropdown"
    dropdown-menu   
        dropdown-item   
            dropdown-divider
    ToolTip
    data-toggle="tooltip"
        data-placement="top"/"right"/"bottom"/"left"
        title="title"

    Breadcrumb
        Breadcrumb-item

1) GitLab(Code Repo)
    when changes detected
2) Jenkins-pulled to docker
3) Docker & kubernetes - pulled to cloud 
4) Cloud ---(Netlify/AWS/AZURE/GCP)
the eniter process is called CI/CD(Contineous Integration/Contineous Delivery)


Docker
------
To build webapplication required software installations needed
Technonologies
1-ReactJS
2-SpringBoot
3-NoSqlDB(MongoDB/CassandraDB)
4-NodeJS(to run ReactJS)
5-Java(to run SpringBoot)
6-mongoose library(to run MongoDB)

what ever the Technonologies/packages required keep all them in one container(docker).

to check docker available or not 
    docker --version

after install the docker successfully
-create one folder(contanarization)
    - create one html file(index.html)
    - create one css file(styles.css)
    - create one Dockerfile
        to make dockerfile to dockerimage
        FROM nginx:alpine
        COPY index.html /usr/share/nginx/html/index.html(path)
        COPY styles.css /usr/share/nginx/html/styles.css

        to expose the image on particular proprtion
        EXPOSE 80
commands to create image
    docker build -t imagename .
    docker run -d -p portno:exposeno(doker image) imagename


kubernetes to run the doker image
start the minikube
    minikube start
    minikube -p minikube doker-env --shell commands

    doker build -t imagename .

    create the deployment file called filename.yaml
    goto line 17 and change to docker image name.
    apply the .yaml file 
        kubectl apply -f filename.yaml
        kubectl get pods
        minikube ip
            it generate ip address to run the image in docker

Jenkins
--------
creating the docker image manulally is not recommended 
instead by using jenkins 
    create a job 
        if any commits are detected in Repo convert docker to dockerimage
        
JavaScript
----------
variables
---------
1) var   2) let    3) const  4) nokeyword
let & const introduced in ES6 version

rules for variable declaration
    1) a-z,A-Z,0-9, $ and _
    2) should not start with number

String
-------
    1) ""
    2) ''
    3) ``(backtick)
        - Template literal

BinInt
-------
the number suffix with 'n' - BigInt

Symbol datatype
---------------
to hide the variable we use the symbol datatype
ex: let x = Symbol("KLUniversity");

undefined
---------

undefined with any arthimetic operations results NaN

null
-----
null with any arthimetic operations null becomes 0

to know the datatype is "typeof variable "

09-10-2024 Agenda
---------- -------
1) const keyword
2) use strict
3) functions
    types of functions
    ES6 enhanced related to functions
4) gitlab keys

JSON(JavaScript Object Notation)
--------------------------------
    it is light weight collection of data
    it is used to transfer the data over network
    the notation used to represented as key value particular
    ex: let obj = {
        frontend:"React",
        backend:"Node",
        database:"MongoDB"
    };

Functions in JS
---------------
    business logic
    reuse business logic
    Types of Functions
    - function declarations(Named functions)
    - function expression / anonymous functions
    - arrow functions(from ES6)
    - constructor functions
    - callback functions
    - IIFE (Immidiate Invokable Functional Expression)(from ES9)
    - Generator functions
    - Higher order functions 

function declarations(Named functions)
-----------------------------------------
function with user defined name called as function declaration / named functions
syntax:
function functionname(param1,param2,param3,....,param-n){
// business logic
}
calling of function - functionname(arg1,arg2,arg3,.....,arg-n);

function expression / anonymous function
-----------------------------------------
function without name called as function expression / anonymous function
syntax:
let variablename = function (param1,param2,param3,....,param-n){
// business logic
}
calling of function - variablename(arg1,arg2,arg3,.....,arg-n);

arrow function
--------------
arrow functions simplifies the business logic
these arrow functions are introduced in ES6 version and we will represent with the help of "=>"
syntax:

function definition
-------------------
let functionname = (param1,param2,param3,....,param-n) => {
    // business logic
}

call the functions
------------------
functionname(arg1,arg2,arg3,....,arg-n);

